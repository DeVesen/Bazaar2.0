@using DeVesen.Bazaar.Client.Extensions
@using DeVesen.Bazaar.Client.Models
@using DeVesen.Bazaar.Client.Pages.Manufacturer.Components
@using DeVesen.Bazaar.Client.State
@using DeVesen.Bazaar.Client.State.Manufacturer
@using DeVesen.Bazaar.Client.State.Title
@using Fluxor

@page "/article-manufacturer"

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject TitleFacade TitleFacade
@inject StateFacade StateFacade
@inject IState<ManufacturerState> ManufacturerState
@inject IDialogService DialogService

<ManufacturerOverviewToolbar @bind-SearchText="@_searchText"
                             @bind-SearchText:after="@ReloadElements"
                             OnCreateBtnClick="@CreateManufacturerAsync" />

<MudTable T="Manufacturer"
          FixedHeader
          Hover
          Items="@ManufacturerState.Value.Items"
          SortLabel="Sort By"
          OnRowClick="OnTableRowClickedAsync">
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<Manufacturer, object>(x => x.Name)">Bezeichnung</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Bezeichnung">@context.Name</MudTd>
    </RowTemplate>
</MudTable>

@code {

    private string? _searchText;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        TitleFacade.SetCaption("Verkauf");
    }

    private async Task CreateManufacturerAsync()
    {
        var options = new DialogOptions
        {
            CloseOnEscapeKey = true,
            BackdropClick = false
        };

        var forceNext = false;

        do
        {
            var parameters = new DialogParameters<ManufacturerCreateDialog> { { x => x.ForceNext, forceNext } };

            var result = await DialogService.ShowAsync<ManufacturerCreateDialog>("Artikel-Kategorie anlegen", parameters, options)
                                            .WaitForResult<ManufacturerCreateDialog.OkResult>();

            if (result.Canceled is false)
            {
                forceNext = result.Data.ForceNext;
            }

            ReloadElements();
        } while (forceNext);
    }

    private void ReloadElements()
    {
        StateFacade.Manufacturer.Fetch();
    }

    private async Task OnTableRowClickedAsync(TableRowClickEventArgs<Manufacturer> args)
    {
        var parameters = new DialogParameters<ManufacturerEditDialog>
        {
            { x => x.Item, args.Item }
        };

        var options = new DialogOptions
        {
            CloseOnEscapeKey = true,
            BackdropClick = false
        };

        await DialogService.ShowAsync<ManufacturerEditDialog>("Artikel-Kategorie ändern", parameters, options)
                           .WaitForResult();
        
        ReloadElements();
    }
}
