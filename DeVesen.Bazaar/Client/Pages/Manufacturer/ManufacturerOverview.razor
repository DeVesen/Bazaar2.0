@using DeVesen.Bazaar.Client.Models
@using DeVesen.Bazaar.Client.Pages.Manufacturer.Components
@using DeVesen.Bazaar.Client.State.Manufacturer
@using DeVesen.Bazaar.Client.State.Title
@using DeVesen.Bazaar.Client.Components.HubHandler

@page "/article-manufacturer"
@attribute [Authorize]

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject TitleFacade TitleFacade
@inject ManufacturerFacade ManufacturerFacade
@inject IState<ManufacturerState> ManufacturerState
@inject Services.DialogService DialogService

<ManufacturerHubActionHandler Added="FetchManufacturerList" Updated="FetchManufacturerList" Removed="FetchManufacturerList" />

<ManufacturerOverviewToolbar @bind-SearchText="@_searchText"
                             @bind-SearchText:after="@FetchManufacturerList"
                             OnCreateBtnClick="@CreateManufacturerAsync" />

<MudTable T="Manufacturer"
          FixedHeader
          Hover
          Loading="@(ManufacturerState.Value.IsLoaded is false)"
          Items="@ManufacturerState.Value.Items"
          SortLabel="Sort By"
          OnRowClick="ModifyManufacturerAsync">
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<Manufacturer, object>(x => x.Name)">Bezeichnung</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Bezeichnung">@context.Name</MudTd>
    </RowTemplate>
</MudTable>

@code {

    private string? _searchText;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        FetchManufacturerList();

        TitleFacade.SetCaption("Verkauf");
    }

    private async Task CreateManufacturerAsync()
    {
        await DialogService.CreateManufacturerAsync();

        FetchManufacturerList();
    }

    private async Task ModifyManufacturerAsync(TableRowClickEventArgs<Manufacturer> args)
    {
        await DialogService.ModifyManufacturerAsync(args.Item!);

        FetchManufacturerList();
    }

    private void FetchManufacturerList()
    {
        ManufacturerFacade.Fetch();
    }
}
