@using DeVesen.Bazaar.Client.Models
@using DeVesen.Bazaar.Client.Pages.ArticleCategory.Components
@using DeVesen.Bazaar.Client.State.ArticleCategory
@using DeVesen.Bazaar.Client.State.Title
@using DeVesen.Bazaar.Client.Components.HubHandler

@page "/article-category"

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject TitleFacade TitleFacade
@inject ArticleCategoryFacade ArticleCategoryFacade
@inject IState<ArticleCategoryState> ArticleCategoryState
@inject Services.DialogService DialogService

<ArticleCategoryHubActionHandler Added="FetchArticleCategoryList" Updated="FetchArticleCategoryList" Removed="FetchArticleCategoryList" />

<ArticleCategoryOverviewToolbar @bind-SearchText="@_searchText"
                                @bind-SearchText:after="@FetchArticleCategoryList"
                                OnCreateBtnClick="@CreateArticleCategoryAsync" />

<MudTable T="ArticleCategory"
          FixedHeader
          Hover
          Loading="@(ArticleCategoryState.Value.IsLoaded is false)"
          Items="@ArticleCategoryState.Value.Items"
          SortLabel="Sort By"
          OnRowClick="ModifyArticleCategoryAsync">
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<ArticleCategory, object>(x => x.Name)">Bezeichnung</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Bezeichnung">@context.Name</MudTd>
    </RowTemplate>
</MudTable>

@code {

    private string? _searchText;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        FetchArticleCategoryList();

        TitleFacade.SetCaption("Kategorien");
    }

    private async Task CreateArticleCategoryAsync()
    {
        await DialogService.CreateArticleCategoryAsync();
        
        FetchArticleCategoryList();
    }

    private async Task ModifyArticleCategoryAsync(TableRowClickEventArgs<ArticleCategory> args)
    {
        await DialogService.ModifyArticleCategoryAsync(args.Item!);

        FetchArticleCategoryList();
    }

    private void FetchArticleCategoryList()
    {
        ArticleCategoryFacade.Fetch();

        StateHasChanged();
    }
}
