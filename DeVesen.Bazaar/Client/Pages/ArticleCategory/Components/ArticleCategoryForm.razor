@using DeVesen.Bazaar.Client.Components.Common.TextField
@using DeVesen.Bazaar.Client.Models

<MudForm IsValid="@IsValid"
         IsTouched="@IsTouched"
         IsValidChanged="@IsValidChanged"
         IsTouchedChanged="@IsTouchedChanged"
         FieldChanged="OnFormFieldChangedAsync"
         Model="Item"
         Validation="@Validation"
         Style="margin-bottom: 20px; min-width: 370px">
    <MudGrid>
        <MudItem xs="12">
            <DvTextField T="string"
                         Required
                         Label="Bezeichnung"
                         @bind-Value="Item.Name"
                         For="@(() => Item.Name)"/>
        </MudItem>
    </MudGrid>
    
</MudForm>

@code {

    [Parameter]
    public required ArticleCategory Item { get; set; }

    [Parameter]
    public required EventCallback<ArticleCategory> ItemChanged { get; set; }

    [Parameter]
    public bool IsValid { get; set; }

    [Parameter]
    public EventCallback<bool> IsValidChanged { get; set; }

    [Parameter]
    public bool IsTouched { get; set; }

    [Parameter]
    public EventCallback<bool> IsTouchedChanged { get; set; }

    [Parameter]
    public EventCallback RequestSave { get; set; }

    [Parameter]
    [Category(CategoryTypes.FormComponent.Validation)]
    public object? Validation { get; set; } = null;

    private async Task OnFormFieldChangedAsync()
    {
        await ItemChanged.InvokeAsync(Item);
    }
}
