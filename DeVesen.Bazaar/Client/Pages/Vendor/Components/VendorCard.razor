@using DeVesen.Bazaar.Client.Components.Common.IconButton
@using DeVesen.Bazaar.Client.Components.Common.ListingElement
@using DeVesen.Bazaar.Client.Models

<MudCard Elevation="2">
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudAvatar Color="Color.Primary">
                <MudIcon Icon="@Icons.Material.TwoTone.Person2" />
            </MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo="Typo.body1">@VendorItem.Item.GetTotalName()</MudText>
            <MudText Typo="Typo.body2">@VendorItem.Item.Id</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
        <ListingElementText Icon="@Icons.Material.TwoTone.AreaChart" Value="@VendorItem.Statistic.ToString()" />
        <ListingElementText Icon="@Icons.Material.TwoTone.Info" Value="@VendorItem.Item.Note" />
    </MudCardContent>
    <MudCardActions Class="d-flex justify-space-between">
        <DvIconButtonEdit OnClick="DoEdit"/>
        <DvIconButtonArticles OnClick="GoToArticles"/>
        <DvIconButtonGears OnClick="GoToModify" />
    </MudCardActions>
</MudCard>

@code {

    [Parameter]
    public required VendorView VendorItem { get; set; }

    [Parameter]
    public EventCallback<VendorView> OnEdit { get; set; }

    [Parameter]
    public EventCallback<VendorView> OnArticle { get; set; }

    [Parameter]
    public EventCallback<VendorView> OnModify { get; set; }

    private async Task DoEdit()
    {
        await OnEdit.InvokeAsync(VendorItem);
    }

    private async Task GoToArticles()
    {
        await OnArticle.InvokeAsync(VendorItem);
    }

    private async Task GoToModify()
    {
        await OnModify.InvokeAsync(VendorItem);
    }

}
