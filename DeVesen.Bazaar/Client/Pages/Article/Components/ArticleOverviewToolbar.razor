@using DeVesen.Bazaar.Client.Models
@using DeVesen.Bazaar.Client.Components.Common.TextField
@using DeVesen.Bazaar.Client.Pages.Vendor.Components
@using DeVesen.Bazaar.Client.Services

@inject Services.DialogService DialogService;
@inject VendorService VendorService

<style>

    .to-action-left {
        padding-left: .5rem;
    }
    .to-action-right {
        padding-left: .5rem;
    }

    @@media (max-width: 550px) {
        .wrap-overview {
            flex-wrap: wrap;
            gap: 6px;
        }

        .to-action-left {
            padding-left: 0;
        }

        .to-action-right {
            padding-left: 0;
        }
        .action-short-content {
            width: 100% !important;
            justify-content: center !important;
            padding-bottom: .5rem;
        }
    }
</style>

<MudPaper Class="d-flex wrap-overview flex-grow-1 to-action-right">
    <MudGrid Spacing="2" Class="flex-shrink-1">
        <MudItem xs="12" Class="d-flex flex-grow-1 gap-3">
            @if (ShowVendorSelection)
            {
                <VendorSelector Item="Vendor"
                                ItemChanged="@VendorChanged"
                                Disabled="@DisableVendorSelection"
                                DisableNewItem="@DisableNewItem"
                                OuterClass="flex-grow-1" />

                <MudIconButton Icon="@Icons.Material.TwoTone.QrCodeScanner"
                               OnClick="OnBcScanner"/>
            }
            else
            {
                <MudText Typo="Typo.h3">@Vendor?.GetTotalName()</MudText>
            }
        </MudItem>
        <MudItem xs="3">
            <DvTextField T="string"
                         Label="Nummer"
                         DebounceInterval="500"
                         Value="@Number"
                         ValueChanged="@NumberChanged" />
        </MudItem>
        <MudItem xs="9">
            <DvTextField T="string"
                         Label="Freitextsuche"
                         DebounceInterval="500"
                         Value="@SearchText"
                         ValueChanged="@SearchTextChanged" />
        </MudItem>
    </MudGrid>
    
    <div class="d-flex to-action-left action-short-content">
        @ChildContent
    </div>
        
</MudPaper>

@code {
    [Parameter]
    public Vendor? Vendor { get; set; }

    [Parameter]
    public string? Number { get; set; }

    [Parameter]
    public string? SearchText { get; set; }

    [Parameter]
    public bool DisableVendorSelection { get; set; }

    [Parameter]
    public bool ShowVendorSelection { get; set; } = true;

    [Parameter]
    public bool DisableNewItem { get; set; }

    [Parameter]
    public EventCallback<Vendor?> VendorChanged { get; set; }

    [Parameter]
    public EventCallback<string?> NumberChanged { get; set; }

    [Parameter]
    public EventCallback<string?> SearchTextChanged { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private async Task OnBcScanner(MouseEventArgs arg)
    {
        var bcInput = await DialogService.ScanBarcodeAsync();

        if (bcInput.Canceled)
        {
            await SetNewVendor(null);
            return;
        }

        var scannedVendor = await VendorService.GetByIdAsync(bcInput.Data);

        if (scannedVendor.IsValid is false)
        {
            await SetNewVendor(null);
            return;
        }
        
        await SetNewVendor(scannedVendor.Value.Item);
    }

    private async Task SetNewVendor(Vendor? newItem)
    {
        Vendor = newItem;
        await VendorChanged.InvokeAsync(newItem);
    }

}
