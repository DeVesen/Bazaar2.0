@using DeVesen.Bazaar.Client.Models
@using DeVesen.Bazaar.Client.Validator
@using DeVesen.Bazaar.Client.Components.Common.TextField
@using DeVesen.Bazaar.Client.Components.Manufacturer
@using DeVesen.Bazaar.Client.Components.ArticleCategory

@inject ArticleValidator ArticleValidator

<MudForm @ref="_form"
         ValidationDelay="1000"
         IsValidChanged="OnIsValidChanged"
         FieldChanged="OnFormFieldChangedAsync"
         Model="ArticleItem"
         Validation="@(ArticleValidator.ValidateAsync)"
         Style="margin-bottom: 20px; min-width: 370px">
    <MudGrid Spacing="2">
        <MudItem xs="12" sm="2">
            <DvTextField T="long"
                         Required
                         Label="Nummer"
                         Disabled="@DisableNumber"
                         @bind-Value="ArticleItem.Number"
                         For="@(() => ArticleItem.Number)" />
        </MudItem>

        <MudItem xs="12" sm="5">
            <ArticleCategorySelector Required
                                     For="@(() => ArticleItem.ArticleCategory)"
                                     @bind-Value="ArticleItem.ArticleCategory" />
        </MudItem>
        <MudItem xs="12" sm="5">
            <ManufacturerSelector Required
                                  For="@(() => ArticleItem.Manufacturer)"
                                  @bind-Value="ArticleItem.Manufacturer" />
        </MudItem>
        <MudItem xs="12" sm="12">
            <DvTextField T="string"
                         Required
                         Label="Beschreibung"
                         @bind-Value="ArticleItem.Description"
                         For="@(() => ArticleItem.Description)" />
        </MudItem>

        <MudItem xs="12" sm="6">
            <DvTextField T="double"
                         Required
                         Label="Preis"
                         @bind-Value="ArticleItem.Price01"
                         For="@(() => ArticleItem.Price01)" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <DvTextField T="double?"
                         Label="Preis alternativ"
                         @bind-Value="ArticleItem.Price02"
                         For="@(() => ArticleItem.Price02)" />
        </MudItem>
    </MudGrid>
    
</MudForm>

@code {
    private MudForm _form = null!;

    [Parameter]
    public required bool DisableNumber { get; set; }

    [Parameter]
    public required Article ArticleItem { get; set; }

    [Parameter]
    public required EventCallback<Article> ArticleItemChanged { get; set; }

    [Parameter]
    public bool IsValid { get; set; }

    [Parameter]
    public EventCallback<bool> IsValidChanged { get; set; }

    [Parameter]
    public bool IsTouched { get; set; }

    [Parameter]
    public EventCallback<bool> IsTouchedChanged { get; set; }

    private async Task OnIsValidChanged(bool newValue)
    {
        await IsValidChanged.InvokeAsync(newValue);
    }

    private async Task OnFormFieldChangedAsync()
    {
        await ArticleItemChanged.InvokeAsync(ArticleItem);

        await _form.Validate();
    }


}
