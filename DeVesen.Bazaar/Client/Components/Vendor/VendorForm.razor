@using DeVesen.Bazaar.Client.Services
@using DeVesen.Bazaar.Client.Components.Common.TextField
@using DeVesen.Bazaar.Client.Models

<MudForm IsValid="@IsValid"
         IsTouched="@IsTouched"
         IsValidChanged="@IsValidChanged"
         IsTouchedChanged="@IsTouchedChanged"
         FieldChanged="OnFormFieldChangedAsync"
         Model="Item"
         Validation="@Validation"
         Style="margin-bottom: 20px; min-width: 370px">
    <MudGrid Spacing="2">
        <MudItem xs="12" sm="2">
            <MudSelect T="string"
                       Required
                       ShrinkLabel
                       Margin="Margin.Dense"
                       Variant="Variant.Outlined"
                       Label="Anrede"
                       Value="@Item.Salutation"
                       For="@(() => Item.Salutation)">
                <MudSelectItem Value="@("Male")">
                    <MudIcon Icon="@Icons.Material.TwoTone.Male"></MudIcon>
                </MudSelectItem>
                <MudSelectItem Value="@("Female")">
                    <MudIcon Icon="@Icons.Material.TwoTone.Female"></MudIcon>
                </MudSelectItem>
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="5">
            <DvTextField T="string"
                         Required
                         Label="Vorname"
                         @bind-Value="Item.FirstName"
                         For="@(() => Item.FirstName)" />
        </MudItem>
        <MudItem xs="12" sm="5">
            <DvTextField T="string"
                         Required
                         Label="Nachname"
                         @bind-Value="Item.LastName"
                         For="@(() => Item.LastName)" />
        </MudItem>
        <MudItem xs="12" sm="12">
            <DvTextField T="string"
                         Label="Anschrift"
                         @bind-Value="Item.Address"
                         For="@(() => Item.Address)" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <DvTextField T="string"
                         Label="E-Mail"
                         @bind-Value="Item.EMail"
                         For="@(() => Item.EMail)" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <DvTextField T="string"
                         Label="Telefon"
                         @bind-Value="Item.Phone"
                         For="@(() => Item.Phone)" />
        </MudItem>
        <MudItem xs="12" sm="12">
            <DvTextField T="string"
                         Label="Notiz"
                         @bind-Value="Item.Note"
                         For="@(() => Item.Note)" />
        </MudItem>
    </MudGrid>
    
</MudForm>

@code {

    [Parameter]
    public required Vendor Item { get; set; }

    [Parameter]
    public required EventCallback<Vendor> ItemChanged { get; set; }

    [Parameter]
    public bool IsValid { get; set; }

    [Parameter]
    public EventCallback<bool> IsValidChanged { get; set; }

    [Parameter]
    public bool IsTouched { get; set; }

    [Parameter]
    public EventCallback<bool> IsTouchedChanged { get; set; }

    [Parameter]
    public EventCallback RequestSave { get; set; }

    [Parameter]
    [Category(CategoryTypes.FormComponent.Validation)]
    public object? Validation { get; set; } = null;

    private async Task OnFormFieldChangedAsync()
    {
        await ItemChanged.InvokeAsync(Item);
    }

}
