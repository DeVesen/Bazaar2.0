
<CascadingValue Value="false" Name="SubscribeToParentForm" IsFixed>
    <MudIconButton Color="@Color"
                   Edge="@Edge"
                   Icon="@Icon"
                   UserAttributes="@UserAttributes"
                   Size="@Size"
                   Variant="@Variant"
                   Disabled="@Disabled"
                   HtmlTag="@HtmlTag"
                   ButtonType="@ButtonType"
                   Href="@Href"
                   Target="@Target"
                   Rel="@Rel"
                   ClickPropagation="@ClickPropagation"
                   DropShadow="@DropShadow"
                   Ripple="@Ripple"
                   OnClick="@OnClick"
                   Class="@Class"
                   Style="@Style"
                   Tag="@Tag">@ChildContent</MudIconButton>
</CascadingValue>

@code {
    [Parameter]
    public Edge Edge { get; set; }
    
    [Parameter]
    public string? Icon { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object?> UserAttributes { get; set; } = new();

    [Parameter]
    public Color Color { get; set; } = Color.Default;

    [Parameter]
    public Size Size { get; set; } = Size.Medium;

    [Parameter]
    public Variant Variant { get; set; } = Variant.Filled;

    [Parameter]
    public bool FullWidth { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }


    [Parameter]
    public string HtmlTag { get; set; } = "button";

    [Parameter]
    public ButtonType ButtonType { get; set; }

    [Parameter]
    public string? Href { get; set; }

    [Parameter]
    public string? Target { get; set; }

    [Parameter]
    public string? Rel { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public bool ClickPropagation { get; set; }

    [Parameter]
    public bool DropShadow { get; set; } = true;

    [Parameter]
    public bool Ripple { get; set; } = true;

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }
    

    [Parameter]
    public string? Class { get; set; } = "rounded-lg";

    [Parameter]
    public string? Style { get; set; }

    [Parameter]
    public object? Tag { get; set; }
}
