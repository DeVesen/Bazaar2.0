@using DeVesen.Bazaar.Client.Components.Common.TextField
@using DeVesen.Bazaar.Client.Components.Common.Buttons
@using DeVesen.Bazaar.Client.State

@inject StateFacade StateFacade

<MudDialog>
    <DialogContent>
        <MudGrid Spacing="1">
            <MudItem xs="12" Class="d-flex">
                <DvTextField T="long?"
                             @ref="_articleNumberRef"
                             @bind-Value="@_articleNumber"
                             AutoFocus
                             OnKeyUp="OnArticleNumberKeyUpAsync" />
            </MudItem>
            <MudItem xs="12">
                <MudAlert Severity="@_releaseSeverityStatus">@_releaseSeverityText</MudAlert>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <DvButtonClose OnClick="OnCloseAsync" />
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public required string VendorId { get; set; }

    private DvTextField<long?>? _articleNumberRef;
    private long? _articleNumber = null;
    private Severity _releaseSeverityStatus = Severity.Normal;
    private string _releaseSeverityText = "Bitte Artickelnummer eingeben ...";

    private void OnCloseAsync() => MudDialog.Close();

    private void SetReleaseSuccess(string text)
    {
        _releaseSeverityStatus = Severity.Success;
        _releaseSeverityText = text;
    }

    private void SetReleaseError(string text)
    {
        _releaseSeverityStatus = Severity.Error;
        _releaseSeverityText = text;
    }

    private async Task OnArticleNumberKeyUpAsync(KeyboardEventArgs obj)
    {
        if (obj.Key == "Enter")
        {
            if (_articleNumber.HasValue)
            {
                await ApproveArticleAsync(_articleNumber.Value);
            }

            await SelectArticleNumberInput();
        }
    }

    private async Task ApproveArticleAsync(long articleNumber)
    {
        var result = await StateFacade.Article.ApproveArticleAsync(articleNumber);

        if (result.IsValid)
        {
            SetReleaseSuccess($"Artikel {articleNumber} erfolgreich freigegeben!");
        }
        else
        {
            SetReleaseError(result.ErrorMessage);
        }

        StateFacade.Article.Fetch();
        StateFacade.Vendor.Fetch();
    }

    private async Task SelectArticleNumberInput()
    {
        if (_articleNumberRef == null)
        {
            return;
        }

        await _articleNumberRef.FocusAsync();
        await _articleNumberRef.SelectAsync();
    }
}
