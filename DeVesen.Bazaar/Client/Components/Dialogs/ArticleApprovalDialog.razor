@using DeVesen.Bazaar.Client.Components.Common.TextField
@using DeVesen.Bazaar.Client.Components.Common.Buttons
@using DeVesen.Bazaar.Client.Services

@inject VendorService VendorService

<MudDialog>
    <DialogContent>
        <div style="width: 350px" class="d-flex flex-column gap-2">
            <DvTextField T="long?"
                         @ref="_articleNumberRef"
                         @bind-Value="@_articleNumber"
                         FullWidth
                         OnKeyUp="OnArticleNumberKeyUpAsync"/>
            
            <MudAlert Severity="@_releaseSeverityStatus"
                      Variant="@_releaseVariant">@_releaseSeverityText</MudAlert>
        </div>
    </DialogContent>
    <DialogActions>
        <DvButtonClose OnClick="OnCloseAsync" />
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public required string VendorId { get; set; }

    private DvTextField<long?>? _articleNumberRef;
    private long? _articleNumber;
    private Severity _releaseSeverityStatus = Severity.Normal;
    private Variant _releaseVariant = Variant.Text;
    private string _releaseSeverityText = "Bitte Artickelnummer eingeben ...";

    private void OnCloseAsync() => MudDialog.Close();

    private void SetReleaseSuccess(string text)
    {
        _releaseSeverityStatus = Severity.Success;
        _releaseVariant = Variant.Filled;
        _releaseSeverityText = text;
    }

    private void SetReleaseError(string text)
    {
        _releaseSeverityStatus = Severity.Error;
        _releaseVariant = Variant.Filled;
        _releaseSeverityText = text;
    }

    private async Task OnArticleNumberKeyUpAsync(KeyboardEventArgs obj)
    {
        if (obj.Key == "Enter")
        {
            if (_articleNumber.HasValue)
            {
                await ApproveArticleAsync(_articleNumber.Value);
            }

            await SelectArticleNumberInput();
        }
    }

    private async Task ApproveArticleAsync(long articleNumber)
    {
        var result = await VendorService.ApproveAsync(VendorId, articleNumber);

        if (result.IsValid)
        {
            SetReleaseSuccess($"Artikel {articleNumber} erfolgreich freigegeben!");
        }
        else
        {
            SetReleaseError(result.ErrorMessage);
        }
    }

    private async Task SelectArticleNumberInput()
    {
        if (_articleNumberRef == null)
        {
            return;
        }

        await _articleNumberRef.FocusAsync();
        await _articleNumberRef.SelectAsync();
    }
}
