@using DeVesen.Bazaar.Client.Extensions
@using DeVesen.Bazaar.Client.State.VendorView
@using DeVesen.Bazaar.Shared.Events

@implements IAsyncDisposable;

@inject VendorHubConnectionService VendorHub;
@inject VendorViewFacade VendorViewFacade;

@code {

    private IDisposable _addedActionHandle = null!;
    private IDisposable _updatedActionHandle = null!;
    private IDisposable _removedActionHandle = null!;

    [Parameter]
    public EventCallback<VendorAddedArgs> Added { get; set; }

    [Parameter]
    public EventCallback<VendorUpdatedArgs> Updated { get; set; }

    [Parameter]
    public EventCallback<VendorRemovedArgs> Removed { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await VendorHub.StartAsync();

        _addedActionHandle = VendorHub.RegisterOnAdded(OnAdded);
        _updatedActionHandle = VendorHub.RegisterOnUpdated(OnUpdated);
        _removedActionHandle = VendorHub.RegisterOnRemoved(OnRemoved);
    }

    private void OnAdded(VendorAddedArgs args)
    {
        Added.InvokeAsync(args);
    }

    private void OnUpdated(VendorUpdatedArgs args)
    {
        Updated.InvokeAsync(args);
    }

    private void OnRemoved(VendorRemovedArgs args)
    {
        Removed.InvokeAsync(args);
    }

    public async ValueTask DisposeAsync()
    {
        await VendorHub.StopAsync();
    }

}
